{
  int count;
  char temp;
  for(count = 0; count < strlen(expression); count++)
    {
      if(expression[count] == '(' || expression[count] == '{' || expression[count] == '[')
	{
	  push(expression[count]);
	}
      if(expression[count] == ')' || expression[count] == '}' || expression[count] == ']')
	{
	  if(top == -1)
	    {
	      printf("The Right Parentheses are more than the Left Parentheses\n");
	      return 0;
	    }
	  else
	    {
	      temp = pop();
	      if(!match_paranthesis(temp, expression[count]))
		{
		  printf("The Mismatched Parentheses in the Expression are:\t%c and %c\n", temp, expression[count]);
		  return 0;
		}
	    }
	}
    }
  if(top == -1)
    {
      printf("\nThe Expression has Balanced Parentheses\n"); 
      return 1;
    }
  else 
    {
      printf("The Expression has unbalanced parentheses\n");
      return 0;
    }
}
#include<stdlib.h>
#include<stdio.h>
#include"stack.h"

int main(int argc, char* argv[])
{
    char expression[256];
    char string[256];
    int i;
    
    printf("Enter what your want to test please:\n");
    fflush(stdin);

    for(i=0;;i++)
    {
        fgets(expression, sizeof expression, stdin);
        
        
        if (check_Balance(expression))
        {
            string[i]=0;
            
            printf("YES\n");
            
        }
        else
        {
            printf ("NO\n");
        }
    }
    return 0;
}


